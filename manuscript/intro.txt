# Foreword
In recently years, tech startup culture has reached its peakest momentum, and the digital contents on the internet are no longer static and read-only but have long transformed into rich applications and services tied to one another by data and APIs, forming a gigantic web of supply chains.

Today, as more and more people are connected to the internet, speed and response time have become a primary concern in any scalable application. Many programming languages have embraced the non-blocking, asynchronous computing to leverage the power of today's machines. Computers are no longer doing one thing really fast, but they are required to multi-task to be able to serve the needs from millions of users.

Go was created at Google as an improvement to C language. While C is considered the most efficient language second only to Assembly, it is old and not suitable for modern web development in terms of scalability and syntax. Goâ€™s objective is to be as concise, quick and concurrent as a scripting language while still being as performant as a compiled language like C. 
You will soon see how Go gives you the best of both world--the dynamicity of a scripting language and a fast, strong typing of a compiled one. 

# Intention
My intention is to write a book to guide you toward building a web application as fast as possible without spending too much time on theory and text. As Go itself has a very rich set of built-in packages which can get you very far into web development, I will not be adopting any framework to complicate the task and deviate you from understanding the idiomatic core of the language other than just a few external packages that may fill in the weak spots of the built-in ones.

